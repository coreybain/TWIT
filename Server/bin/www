#!/usr/bin/env node

//MARK: -- Variables
var startup = true

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('Server:server');
var http = require('http');
var twitServerSync = require('../twit/twitServerSync');
var firebaseServerSync = require('../firebase/firebaseServerSync');

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '3001');
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */


// Start Listening to Twit Server and Syncing information to Firebase
function twitSync() {
  console.log('Hello Corey');
var pageNumber = 1
var showNumber = 1643
function test() { twitServerSync.twitConnect("episodes", showNumber, (pageNumber++), function(result) {
    console.log('YESSSSSSSSSS')
    firebaseServerSync.firebaseEpisodeSync("episodes", showNumber, result);
});
}
var timer = setInterval(test,10000);
}


function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);

  //This is used to sync data from the twit servers to Spiritdevs Firebase account.
  twitSync();
}
